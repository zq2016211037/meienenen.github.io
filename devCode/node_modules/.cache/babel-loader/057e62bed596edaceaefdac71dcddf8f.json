{"ast":null,"code":"import _classCallCheck from \"/Users/zqian/Documents/code/2018/react/coolblog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zqian/Documents/code/2018/react/coolblog/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zqian/Documents/code/2018/react/coolblog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zqian/Documents/code/2018/react/coolblog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zqian/Documents/code/2018/react/coolblog/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/zqian/Documents/code/2018/react/coolblog/src/components/admin/manageblogs/bloglists/index.js\";\nimport React, { Component } from \"react\"; // // import fetch from 'whatwg-fetch';\n// class BlogLists extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             username: '',\n//             lastGistUrl: '',\n//             userLists: []\n//         };\n//     }\n//     componentDidMount() {\n//         var url =\"http://localhost:8888/front/getBlogLists\";\n//         this.blogsRes = fetch(url,{\n//             method: 'GET',\n//             mode: 'cors',\n//         }).then(res => {\n//             console.log(res);\n//             return res.json();\n//         }).then(json => {\n//             console.log('获取的结果', json);\n//             this.setState({\n//                 userLists: json.articles,\n//                 pages: json.pages,\n//                 page: json.page,\n//                 limit: json.limit,\n//                 count: json.count\n//             });\n//             return json;\n//         }).catch(err => {\n//             console.log('请求错误', err);\n//         });\n//     }\n//     componentWillUnmount() {\n//       this.blogsRes.abort();\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 welcome to bloglists !\n//                 {this.state.userLists.map(function(item){\n//                     console.log(item);\n//                     return (<p>i</p>)\n//                 })}\n//             </div>\n//         )\n//     }\n//     getUsers = () =>{\n//     }\n// }\n// export default BlogLists;\n\nimport { List, message, Avatar, Spin } from 'antd';\nimport reqwest from 'reqwest';\nimport InfiniteScroll from 'react-infinite-scroller';\nvar fakeDataUrl = 'https://randomuser.me/api/?results=5&inc=name,gender,email,nat&noinfo';\n\nvar InfiniteListExample =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InfiniteListExample, _Component);\n\n  function InfiniteListExample() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InfiniteListExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InfiniteListExample)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: [],\n      loading: false,\n      hasMore: true\n    };\n\n    _this.fetchData = function (callback) {\n      reqwest({\n        url: fakeDataUrl,\n        type: 'json',\n        method: 'get',\n        contentType: 'application/json',\n        success: function success(res) {\n          callback(res);\n        }\n      });\n    };\n\n    _this.handleInfiniteOnLoad = function () {\n      var data = _this.state.data;\n\n      _this.setState({\n        loading: true\n      });\n\n      if (data.length > 14) {\n        message.warning('Infinite List loaded all');\n\n        _this.setState({\n          hasMore: false,\n          loading: false\n        });\n\n        return;\n      }\n\n      _this.fetchData(function (res) {\n        data = data.concat(res.results);\n\n        _this.setState({\n          data: data,\n          loading: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(InfiniteListExample, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.fetchData(function (res) {\n        _this2.setState({\n          data: res.results\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"demo-infinite-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(InfiniteScroll, {\n        initialLoad: false,\n        pageStart: 0,\n        loadMore: this.handleInfiniteOnLoad,\n        hasMore: !this.state.loading && this.state.hasMore,\n        useWindow: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(List, {\n        dataSource: this.state.data,\n        renderItem: function renderItem(item) {\n          return React.createElement(List.Item, {\n            key: item.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, React.createElement(List.Item.Meta, {\n            avatar: React.createElement(Avatar, {\n              src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128\n              },\n              __self: this\n            }),\n            title: React.createElement(\"a\", {\n              href: \"https://ant.design\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 129\n              },\n              __self: this\n            }, item.name.last),\n            description: item.email,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, \"Content\"));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, this.state.loading && this.state.hasMore && React.createElement(\"div\", {\n        className: \"demo-loading-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Spin, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return InfiniteListExample;\n}(Component);","map":{"version":3,"sources":["/Users/zqian/Documents/code/2018/react/coolblog/src/components/admin/manageblogs/bloglists/index.js"],"names":["React","Component","List","message","Avatar","Spin","reqwest","InfiniteScroll","fakeDataUrl","InfiniteListExample","state","data","loading","hasMore","fetchData","callback","url","type","method","contentType","success","res","handleInfiniteOnLoad","setState","length","warning","concat","results","item","id","name","last","email"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n// // import fetch from 'whatwg-fetch';\n\n// class BlogLists extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             username: '',\n//             lastGistUrl: '',\n//             userLists: []\n//         };\n//     }\n//     componentDidMount() {\n//         var url =\"http://localhost:8888/front/getBlogLists\";\n//         this.blogsRes = fetch(url,{\n//             method: 'GET',\n//             mode: 'cors',\n//         }).then(res => {\n//             console.log(res);\n//             return res.json();\n//         }).then(json => {\n//             console.log('获取的结果', json);\n//             this.setState({\n//                 userLists: json.articles,\n//                 pages: json.pages,\n//                 page: json.page,\n//                 limit: json.limit,\n//                 count: json.count\n//             });\n//             return json;\n//         }).catch(err => {\n//             console.log('请求错误', err);\n//         });\n//     }\n//     componentWillUnmount() {\n//       this.blogsRes.abort();\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 welcome to bloglists !\n//                 {this.state.userLists.map(function(item){\n//                     console.log(item);\n//                     return (<p>i</p>)\n//                 })}\n//             </div>\n//         )\n//     }\n//     getUsers = () =>{\n\n//     }\n// }\n\n// export default BlogLists;\nimport {\n    List, message, Avatar, Spin,\n  } from 'antd';\n  import reqwest from 'reqwest';\n  \n  import InfiniteScroll from 'react-infinite-scroller';\n  \n  const fakeDataUrl = 'https://randomuser.me/api/?results=5&inc=name,gender,email,nat&noinfo';\n  \n  class InfiniteListExample extends Component {\n    state = {\n      data: [],\n      loading: false,\n      hasMore: true,\n    }\n  \n    componentDidMount() {\n      this.fetchData((res) => {\n        this.setState({\n          data: res.results,\n        });\n      });\n    }\n  \n    fetchData = (callback) => {\n      reqwest({\n        url: fakeDataUrl,\n        type: 'json',\n        method: 'get',\n        contentType: 'application/json',\n        success: (res) => {\n          callback(res);\n        },\n      });\n    }\n  \n    handleInfiniteOnLoad = () => {\n      let data = this.state.data;\n      this.setState({\n        loading: true,\n      });\n      if (data.length > 14) {\n        message.warning('Infinite List loaded all');\n        this.setState({\n          hasMore: false,\n          loading: false,\n        });\n        return;\n      }\n      this.fetchData((res) => {\n        data = data.concat(res.results);\n        this.setState({\n          data,\n          loading: false,\n        });\n      });\n    }\n  \n    render() {\n      return (\n        <div className=\"demo-infinite-container\">\n          <InfiniteScroll\n            initialLoad={false}\n            pageStart={0}\n            loadMore={this.handleInfiniteOnLoad}\n            hasMore={!this.state.loading && this.state.hasMore}\n            useWindow={false}\n          >\n            <List\n              dataSource={this.state.data}\n              renderItem={item => (\n                <List.Item key={item.id}>\n                  <List.Item.Meta\n                    avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                    title={<a href=\"https://ant.design\">{item.name.last}</a>}\n                    description={item.email}\n                  />\n                  <div>Content</div>\n                </List.Item>\n              )}\n            >\n              {this.state.loading && this.state.hasMore && (\n                <div className=\"demo-loading-container\">\n                  <Spin />\n                </div>\n              )}\n            </List>\n          </InfiniteScroll>\n        </div>\n      );\n    }\n  }"]},"metadata":{},"sourceType":"module"}