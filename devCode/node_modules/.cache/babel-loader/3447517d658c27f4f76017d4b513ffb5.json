{"ast":null,"code":"import _toConsumableArray from \"/Users/zqian/Documents/code/2018/react/coolblog/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/zqian/Documents/code/2018/react/coolblog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zqian/Documents/code/2018/react/coolblog/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zqian/Documents/code/2018/react/coolblog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zqian/Documents/code/2018/react/coolblog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zqian/Documents/code/2018/react/coolblog/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/zqian/Documents/code/2018/react/coolblog/src/components/admin/manageblogs/bloglists/index.js\";\nimport React from 'react';\nimport { Table, Input, Icon, Button, Popconfirm } from 'antd';\n\nvar BlogLists =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BlogLists, _React$Component);\n\n  function BlogLists() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BlogLists);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BlogLists)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: _this.props.value,\n      editable: false\n    };\n\n    _this.handleChange = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        value: value\n      });\n    };\n\n    _this.check = function () {\n      _this.setState({\n        editable: false\n      });\n\n      if (_this.props.onChange) {\n        _this.props.onChange(_this.state.value);\n      }\n    };\n\n    _this.edit = function () {\n      _this.setState({\n        editable: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BlogLists, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          value = _this$state.value,\n          editable = _this$state.editable;\n      return React.createElement(\"div\", {\n        className: \"editable-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, editable ? React.createElement(\"div\", {\n        className: \"editable-cell-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: value,\n        onChange: this.handleChange,\n        onPressEnter: this.check,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(Icon, {\n        type: \"check\",\n        className: \"editable-cell-icon-check\",\n        onClick: this.check,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        className: \"editable-cell-text-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, value || ' ', React.createElement(Icon, {\n        type: \"edit\",\n        className: \"editable-cell-icon\",\n        onClick: this.edit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return BlogLists;\n}(React.Component);\n\nvar EditableTable =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(EditableTable, _React$Component2);\n\n  function EditableTable(props) {\n    var _this2;\n\n    _classCallCheck(this, EditableTable);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(EditableTable).call(this, props));\n\n    _this2.onCellChange = function (index, key) {\n      return function (value) {\n        var dataSource = _toConsumableArray(_this2.state.dataSource);\n\n        dataSource[index][key] = value;\n\n        _this2.setState({\n          dataSource: dataSource\n        });\n      };\n    };\n\n    _this2.onDelete = function (index) {\n      var dataSource = _toConsumableArray(_this2.state.dataSource);\n\n      dataSource.splice(index, 1);\n\n      _this2.setState({\n        dataSource: dataSource\n      });\n    };\n\n    _this2.handleAdd = function () {\n      var _this2$state = _this2.state,\n          count = _this2$state.count,\n          dataSource = _this2$state.dataSource;\n      var newData = {\n        key: count,\n        name: \"Edward King \".concat(count),\n        age: 32,\n        address: \"London, Park Lane no. \".concat(count)\n      };\n\n      _this2.setState({\n        dataSource: [].concat(_toConsumableArray(dataSource), [newData]),\n        count: count + 1\n      });\n    };\n\n    _this2.columns = [{\n      title: 'name',\n      dataIndex: 'name',\n      width: '30%',\n      render: function render(text, record, index) {\n        return React.createElement(EditableCell, {\n          value: text,\n          onChange: _this2.onCellChange(index, 'name'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        });\n      }\n    }, {\n      title: 'age',\n      dataIndex: 'age'\n    }, {\n      title: 'address',\n      dataIndex: 'address'\n    }, {\n      title: 'operation',\n      dataIndex: 'operation',\n      render: function render(text, record, index) {\n        return _this2.state.dataSource.length > 1 ? React.createElement(Popconfirm, {\n          title: \"Sure to delete?\",\n          onConfirm: function onConfirm() {\n            return _this2.onDelete(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Delete\")) : null;\n      }\n    }];\n    _this2.state = {\n      dataSource: [{\n        key: '0',\n        name: 'Edward King 0',\n        age: '32',\n        address: 'London, Park Lane no. 0'\n      }, {\n        key: '1',\n        name: 'Edward King 1',\n        age: '32',\n        address: 'London, Park Lane no. 1'\n      }],\n      count: 2\n    };\n    return _this2;\n  }\n\n  _createClass(EditableTable, [{\n    key: \"render\",\n    value: function render() {\n      var dataSource = this.state.dataSource;\n      var columns = this.columns;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"editable-add-btn\",\n        onClick: this.handleAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Add\"), React.createElement(Table, {\n        bordered: true,\n        dataSource: dataSource,\n        columns: columns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EditableTable;\n}(React.Component);\n\nexport default BlogLists;","map":{"version":3,"sources":["/Users/zqian/Documents/code/2018/react/coolblog/src/components/admin/manageblogs/bloglists/index.js"],"names":["React","Table","Input","Icon","Button","Popconfirm","BlogLists","state","value","props","editable","handleChange","e","target","setState","check","onChange","edit","Component","EditableTable","onCellChange","index","key","dataSource","onDelete","splice","handleAdd","count","newData","name","age","address","columns","title","dataIndex","width","render","text","record","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Input, Icon, Button, Popconfirm } from 'antd';\n\nclass BlogLists extends React.Component {\n  state = {\n    value: this.props.value,\n    editable: false,\n  }\n  handleChange = (e) => {\n    const value = e.target.value;\n    this.setState({ value });\n  }\n  check = () => {\n    this.setState({ editable: false });\n    if (this.props.onChange) {\n      this.props.onChange(this.state.value);\n    }\n  }\n  edit = () => {\n    this.setState({ editable: true });\n  }\n  render() {\n    const { value, editable } = this.state;\n    return (\n      <div className=\"editable-cell\">\n        {\n          editable ?\n            <div className=\"editable-cell-input-wrapper\">\n              <Input\n                value={value}\n                onChange={this.handleChange}\n                onPressEnter={this.check}\n              />\n              <Icon\n                type=\"check\"\n                className=\"editable-cell-icon-check\"\n                onClick={this.check}\n              />\n            </div>\n            :\n            <div className=\"editable-cell-text-wrapper\">\n              {value || ' '}\n              <Icon\n                type=\"edit\"\n                className=\"editable-cell-icon\"\n                onClick={this.edit}\n              />\n            </div>\n        }\n      </div>\n    );\n  }\n}\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.columns = [{\n      title: 'name',\n      dataIndex: 'name',\n      width: '30%',\n      render: (text, record, index) => (\n        <EditableCell\n          value={text}\n          onChange={this.onCellChange(index, 'name')}\n        />\n      ),\n    }, {\n      title: 'age',\n      dataIndex: 'age',\n    }, {\n      title: 'address',\n      dataIndex: 'address',\n    }, {\n      title: 'operation',\n      dataIndex: 'operation',\n      render: (text, record, index) => {\n        return (\n          this.state.dataSource.length > 1 ?\n          (\n            <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.onDelete(index)}>\n              <a href=\"#\">Delete</a>\n            </Popconfirm>\n          ) : null\n        );\n      },\n    }];\n\n    this.state = {\n      dataSource: [{\n        key: '0',\n        name: 'Edward King 0',\n        age: '32',\n        address: 'London, Park Lane no. 0',\n      }, {\n        key: '1',\n        name: 'Edward King 1',\n        age: '32',\n        address: 'London, Park Lane no. 1',\n      }],\n      count: 2,\n    };\n  }\n  onCellChange = (index, key) => {\n    return (value) => {\n      const dataSource = [...this.state.dataSource];\n      dataSource[index][key] = value;\n      this.setState({ dataSource });\n    };\n  }\n  onDelete = (index) => {\n    const dataSource = [...this.state.dataSource];\n    dataSource.splice(index, 1);\n    this.setState({ dataSource });\n  }\n  handleAdd = () => {\n    const { count, dataSource } = this.state;\n    const newData = {\n      key: count,\n      name: `Edward King ${count}`,\n      age: 32,\n      address: `London, Park Lane no. ${count}`,\n    };\n    this.setState({\n      dataSource: [...dataSource, newData],\n      count: count + 1,\n    });\n  }\n  render() {\n    const { dataSource } = this.state;\n    const columns = this.columns;\n    return (\n      <div>\n        <Button className=\"editable-add-btn\" onClick={this.handleAdd}>Add</Button>\n        <Table bordered dataSource={dataSource} columns={columns} />\n      </div>\n    );\n  }\n}\nexport default BlogLists;"]},"metadata":{},"sourceType":"module"}