{"ast":null,"code":"import _classCallCheck from \"/Users/zqian/Documents/code/2018/react/coolblog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zqian/Documents/code/2018/react/coolblog/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zqian/Documents/code/2018/react/coolblog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zqian/Documents/code/2018/react/coolblog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zqian/Documents/code/2018/react/coolblog/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/zqian/Documents/code/2018/react/coolblog/src/components/admin/manageblogs/bloglists/index.js\";\nimport React, { Component } from \"react\"; // // import fetch from 'whatwg-fetch';\n// class BlogLists extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             username: '',\n//             lastGistUrl: '',\n//             userLists: []\n//         };\n//     }\n//     componentDidMount() {\n//         var url =\"http://localhost:8888/front/getBlogLists\";\n//         this.blogsRes = fetch(url,{\n//             method: 'GET',\n//             mode: 'cors',\n//         }).then(res => {\n//             console.log(res);\n//             return res.json();\n//         }).then(json => {\n//             console.log('获取的结果', json);\n//             this.setState({\n//                 userLists: json.articles,\n//                 pages: json.pages,\n//                 page: json.page,\n//                 limit: json.limit,\n//                 count: json.count\n//             });\n//             return json;\n//         }).catch(err => {\n//             console.log('请求错误', err);\n//         });\n//     }\n//     componentWillUnmount() {\n//       this.blogsRes.abort();\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 welcome to bloglists !\n//                 {this.state.userLists.map(function(item){\n//                     console.log(item);\n//                     return (<p>i</p>)\n//                 })}\n//             </div>\n//         )\n//     }\n//     getUsers = () =>{\n//     }\n// }\n// export default BlogLists;\n\nimport { List, message, Avatar, Spin } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nvar BlogLists =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BlogLists, _Component);\n\n  function BlogLists() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BlogLists);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BlogLists)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      userLists: [],\n      pages: '',\n      page: '',\n      limit: '',\n      count: '',\n      loading: false,\n      hasMore: true\n    };\n\n    _this.fetchData = function () {\n      var url = \"http://localhost:8888/front/getBlogLists\";\n      _this.blogsRes = fetch(url, {\n        method: 'GET',\n        mode: 'cors'\n      }).then(function (res) {\n        console.log(res);\n        return res.json();\n      }).then(function (json) {\n        console.log('获取的结果', json);\n\n        _this.setState({\n          articles: json.articles,\n          pages: json.pages,\n          page: json.page,\n          limit: json.limit,\n          count: json.count\n        });\n\n        console.log(_this.state);\n        return json;\n      }).catch(function (err) {\n        console.log('请求错误', err);\n      });\n    };\n\n    _this.handleInfiniteOnLoad = function () {\n      var data = _this.state.articles;\n\n      _this.setState({\n        loading: true\n      });\n\n      if (data.length > 14) {\n        message.warning('Infinite List loaded all');\n\n        _this.setState({\n          hasMore: false,\n          loading: false\n        });\n\n        return;\n      }\n\n      _this.fetchData(function (res) {\n        data = data.concat(res.results);\n\n        _this.setState({\n          data: data,\n          loading: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BlogLists, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n      console.log(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"demo-infinite-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(InfiniteScroll, {\n        initialLoad: false,\n        pageStart: 0,\n        loadMore: this.handleInfiniteOnLoad,\n        hasMore: !this.state.loading && this.state.hasMore,\n        useWindow: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(List, {\n        dataSource: this.state.articles,\n        renderItem: function renderItem(item) {\n          return React.createElement(List.Item, {\n            key: item._id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }, React.createElement(List.Item.Meta, {\n            avatar: React.createElement(Avatar, {\n              src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 138\n              },\n              __self: this\n            }),\n            title: React.createElement(\"a\", {\n              href: \"https://ant.design\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 139\n              },\n              __self: this\n            }, item.article_title),\n            description: item.email,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }, item.author, \"}\"));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, this.state.loading && this.state.hasMore && React.createElement(\"div\", {\n        className: \"demo-loading-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Spin, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return BlogLists;\n}(Component);\n\nexport default BlogLists;","map":{"version":3,"sources":["/Users/zqian/Documents/code/2018/react/coolblog/src/components/admin/manageblogs/bloglists/index.js"],"names":["React","Component","List","message","Avatar","Spin","InfiniteScroll","BlogLists","state","userLists","pages","page","limit","count","loading","hasMore","fetchData","url","blogsRes","fetch","method","mode","then","res","console","log","json","setState","articles","catch","err","handleInfiniteOnLoad","data","length","warning","concat","results","item","_id","article_title","email","author"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n// // import fetch from 'whatwg-fetch';\n\n// class BlogLists extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             username: '',\n//             lastGistUrl: '',\n//             userLists: []\n//         };\n//     }\n//     componentDidMount() {\n//         var url =\"http://localhost:8888/front/getBlogLists\";\n//         this.blogsRes = fetch(url,{\n//             method: 'GET',\n//             mode: 'cors',\n//         }).then(res => {\n//             console.log(res);\n//             return res.json();\n//         }).then(json => {\n//             console.log('获取的结果', json);\n//             this.setState({\n//                 userLists: json.articles,\n//                 pages: json.pages,\n//                 page: json.page,\n//                 limit: json.limit,\n//                 count: json.count\n//             });\n//             return json;\n//         }).catch(err => {\n//             console.log('请求错误', err);\n//         });\n//     }\n//     componentWillUnmount() {\n//       this.blogsRes.abort();\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 welcome to bloglists !\n//                 {this.state.userLists.map(function(item){\n//                     console.log(item);\n//                     return (<p>i</p>)\n//                 })}\n//             </div>\n//         )\n//     }\n//     getUsers = () =>{\n\n//     }\n// }\n\n// export default BlogLists;\nimport {\n    List, message, Avatar, Spin,\n} from 'antd';\n\nimport InfiniteScroll from 'react-infinite-scroller';\n   \nclass BlogLists extends Component {\n    state = {\n        userLists: [],\n        pages: '',\n        page: '',\n        limit: '',\n        count: '',\n        loading: false,\n        hasMore: true,\n    }\n  \n    componentDidMount() {\n      this.fetchData();\n      console.log(this.state);\n    }\n  \n    fetchData = () => {\n        var url =\"http://localhost:8888/front/getBlogLists\";\n        this.blogsRes = fetch(url,{\n            method: 'GET',\n            mode: 'cors',\n        }).then(res => {\n            console.log(res);\n            return res.json();\n        }).then(json => {\n            console.log('获取的结果', json);\n            this.setState({\n                articles: json.articles,\n                pages: json.pages,\n                page: json.page,\n                limit: json.limit,\n                count: json.count\n            });\n            console.log(this.state);\n            return json;\n        }).catch(err => {\n            console.log('请求错误', err);\n        });\n    }\n  \n    handleInfiniteOnLoad = () => {\n      let data = this.state.articles;\n      this.setState({\n        loading: true,\n      });\n      if (data.length > 14) {\n        message.warning('Infinite List loaded all');\n        this.setState({\n          hasMore: false,\n          loading: false,\n        });\n        return;\n      }\n      this.fetchData((res) => {\n        data = data.concat(res.results);\n        this.setState({\n          data,\n          loading: false,\n        });\n      });\n    }\n  \n    render() {\n      return (\n        <div className=\"demo-infinite-container\">\n          <InfiniteScroll\n            initialLoad={false}\n            pageStart={0}\n            loadMore={this.handleInfiniteOnLoad}\n            hasMore={!this.state.loading && this.state.hasMore}\n            useWindow={false}\n          >\n            <List\n              dataSource={this.state.articles}\n              renderItem={item => (\n                <List.Item key={item._id}>\n                  <List.Item.Meta\n                    avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                    title={<a href=\"https://ant.design\">{item.article_title}</a>}\n                    description={item.email}\n                  />\n                  <div>{item.author}}</div>\n                </List.Item>\n              )}\n            >\n              {this.state.loading && this.state.hasMore && (\n                <div className=\"demo-loading-container\">\n                  <Spin />\n                </div>\n              )}\n            </List>\n          </InfiniteScroll>\n        </div>\n      );\n    }\n  }\n\n  export default BlogLists;"]},"metadata":{},"sourceType":"module"}